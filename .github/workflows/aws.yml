name: Deploy to ECR
on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: infra
        IMAGE_TAG: ${{ github.sha }}
        STACK_NAME: InfraStack
      run: |
        aws ecr describe-repositories --repository-names $ECR_REPOSITORY || aws ecr create-repository --repository-name $ECR_REPOSITORY
        aws ssm put-parameter --name "/Task/Flask/IMAGE_TAG" --type String --value $IMAGE_TAG --overwrite
        cd Senior\ DevOps\ Engineer/
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        aws cloudformation deploy --template-file InfraStack.template.json --stack-name InfraStack --capabilities CAPABILITY_NAMED_IAM
        # STACK_PARAMS=$(aws cloudformation describe-stacks --stack-name $STACK_NAME | jq '.Stacks | map ({"ParameterKey": .Parameters[].ParameterKey, "UsePreviousValue": true})')
        # aws cloudformation update-stack --stack-name $STACK_NAME --use-previous-template --capabilities CAPABILITY_NAMED_IAM

